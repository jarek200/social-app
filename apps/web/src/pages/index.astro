---
import BaseLayout from "@layouts/BaseLayout.astro";
import ModerationPanel from "@components/ModerationPanel.astro";
import DashboardSidebar from "@components/DashboardSidebar.astro";
import { RealtimeControls } from "@components/RealtimeControls";
import { FeedIsland } from "@components/FeedIsland";
import { AuthGuard } from "@components/AuthGuard";
import { getRealtimeMetrics } from "@services/analyticsService";
import { getFeedSnapshot } from "@stores/feed";
import { getAdmins, isAdmin, listUsers } from "@stores/users";

const currentUserId = "user-2"; // Noah (admin)
const _userIsAdmin = isAdmin(currentUserId);
const _admins = getAdmins();
const _allUsers = listUsers();
const feed = getFeedSnapshot();
const realtimeMetrics = getRealtimeMetrics();

const _metrics = [
  { label: "New posts", value: feed.length.toString(), delta: "+18%" },
  { label: "Active sessions", value: realtimeMetrics.activeViewers.toLocaleString(), delta: "+6%" },
  { label: "Workflow latency", value: "1.8s", delta: "p95" },
  { label: "Alerts", value: realtimeMetrics.pendingModeration.toString(), delta: "open" },
];
---

<BaseLayout>
<AuthGuard client:load>
  <section class="grid gap-4 rounded-3xl border border-white/10 bg-slate-900/60 p-6">
    <header class="flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
      <div>
        <h2 class="text-2xl font-semibold text-white">Dashboard</h2>
        <p class="text-sm text-slate-400">Operational snapshot across feeds, workflows, and moderation.</p>
      </div>
      <div class="flex gap-3 text-xs">
        <button class="rounded-full border border-white/20 px-4 py-2 font-semibold text-white transition hover:border-brand-400 hover:text-brand-200" type="button">
          Export
        </button>
        <button class="rounded-full bg-brand-500 px-4 py-2 font-semibold text-white transition hover:bg-brand-400" type="button">
          Sync now
        </button>
      </div>
    </header>
    <ul class="grid gap-3 sm:grid-cols-2 lg:grid-cols-4">
      {_metrics.map((metric) => (
        <li class="rounded-2xl border border-white/10 bg-slate-900/80 px-4 py-3">
          <p class="text-xs uppercase tracking-wide text-slate-400">{metric.label}</p>
          <p class="text-2xl font-bold text-white">{metric.value}</p>
          <p class="text-xs text-emerald-300">{metric.delta}</p>
        </li>
      ))}
    </ul>
  </section>

  <section class="rounded-3xl border border-white/10 bg-slate-900/60 p-6">
    <header class="mb-4">
      <h2 class="text-lg font-semibold text-white">ðŸ‘¥ User Roles Demo</h2>
      <p class="text-sm text-slate-400">
        Currently logged in as:
        <span class={`font-semibold ${_userIsAdmin ? "text-amber-400" : "text-blue-400"}`}>
          {_userIsAdmin ? "Admin User" : "Regular User"}
        </span>
      </p>
    </header>
    <div class="grid gap-4 md:grid-cols-2">
      <div class="rounded-2xl border border-white/10 bg-slate-900/70 p-4">
        <h3 class="text-sm font-semibold text-white mb-2">Admin Users ({_admins.length})</h3>
        <ul class="space-y-2">
          {_admins.map((admin) => (
            <li class="flex items-center gap-2 text-sm">
              <span class="w-2 h-2 rounded-full bg-amber-400"></span>
              <span class="text-slate-300">{admin.displayName}</span>
              <span class="text-xs text-slate-500">@{admin.username}</span>
            </li>
          ))}
        </ul>
      </div>
      <div class="rounded-2xl border border-white/10 bg-slate-900/70 p-4">
        <h3 class="text-sm font-semibold text-white mb-2">All Users ({_allUsers.length})</h3>
        <ul class="space-y-2">
          {_allUsers.map((user) => (
            <li class="flex items-center gap-2 text-sm">
              <span class={`w-2 h-2 rounded-full ${user.role === "admin" ? "bg-amber-400" : "bg-blue-400"}`}></span>
              <span class="text-slate-300">{user.displayName}</span>
              <span class="text-xs text-slate-500">({user.role})</span>
            </li>
          ))}
        </ul>
      </div>
    </div>
    {_userIsAdmin && (
      <div class="mt-4 rounded-2xl border border-amber-500/30 bg-amber-500/10 p-4">
        <p class="text-sm text-amber-200">
          ðŸ”§ <strong>Admin Privileges:</strong> You can access the moderation console and manage content.
          Only admin users see the "Admin" link in the navigation.
        </p>
      </div>
    )}
  </section>

  <RealtimeControls client:load />

  <section class="grid gap-6 lg:grid-cols-[2fr_1fr]">
    <div class="grid gap-6">
      <section class="grid gap-4 rounded-3xl border border-white/10 bg-slate-900/60 p-6" id="feed">
        <header class="flex items-center justify-between">
          <div>
            <h2 class="text-lg font-semibold text-white">Live Feed</h2>
            <p class="text-sm text-slate-400">Latest activity from followers and recommended creators.</p>
          </div>
          <button class="rounded-full border border-white/20 px-4 py-2 text-xs font-semibold text-white transition hover:border-brand-400 hover:text-brand-200" type="button">
            Filter
          </button>
        </header>
        <FeedIsland client:load />
      </section>

      <ModerationPanel />
    </div>

    <DashboardSidebar />
  </section>
</AuthGuard>
</BaseLayout>
